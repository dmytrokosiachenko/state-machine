// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`simple snapshot 1`] = `
"// ~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".
import { StateMachine, StateMachineProps } from '@matthewbonig/state-machine';
import { Construct } from 'constructs';
import fs from 'fs';
import path from 'path';
export interface TestStateMachineOverrides {
  readonly 'Which database?': Partial<{
    'Type': string;
    'Choices': [Partial<{
      'Variable': string;
      'StringMatches': string;
      'Next': string;
    }>,Partial<{
      'Variable': string;
      'StringMatches': string;
      'Next': string;
    }>,Partial<{
      'Variable': string;
      'StringMatches': string;
      'Next': string;
    }>];
  }>;
  readonly 'Get belle secret': Partial<{
    'Type': string;
    'Next': string;
    'Parameters': Partial<{
      'SecretId': string;
    }>;
    'Resource': string;
    'ResultPath': string;
  }>;
  readonly 'Parse belle secret value': Partial<{
    'Type': string;
    'Parameters': Partial<{
      'ParsedValue.$': string;
    }>;
    'ResultPath': string;
    'Next': string;
  }>;
  readonly 'Create new database username and password': Partial<{
    'Type': string;
    'Resource': string;
    'Parameters': Partial<{
      'Payload.$': string;
      'FunctionName': string;
    }>;
    'Retry': [Partial<{
      'ErrorEquals': [string,string,string];
      'IntervalSeconds': number;
      'MaxAttempts': number;
      'BackoffRate': number;
    }>];
    'ResultPath': string;
    'Comment': string;
    'Next': string;
    'ResultSelector': Partial<{
      'username.$': string;
      'password.$': string;
      'otsUrl.$': string;
    }>;
  }>;
  readonly 'Create user on the database': Partial<{
    'Type': string;
    'Resource': string;
    'Parameters': Partial<{
      'FunctionName': string;
      'Payload': Partial<{
        'script.$': string;
        'databaseName.$': string;
      }>;
    }>;
    'Retry': [Partial<{
      'ErrorEquals': [string,string,string];
      'IntervalSeconds': number;
      'MaxAttempts': number;
      'BackoffRate': number;
    }>];
    'ResultPath': string;
    'Next': string;
  }>;
  readonly 'Send credentials to user': Partial<{
    'Type': string;
    'Parameters': Partial<{
      'Destination': Partial<{
        'ToAddresses.$': string;
      }>;
      'Message': Partial<{
        'Body': Partial<{
          'Text': Partial<{
            'Data.$': string;
          }>;
        }>;
        'Subject': Partial<{
          'Data': string;
        }>;
      }>;
      'Source': string;
    }>;
    'Resource': string;
    'End': Partial<{
    }>;
  }>;
  readonly 'Get engines secret': Partial<{
    'Type': string;
    'Parameters': Partial<{
      'SecretId': string;
    }>;
    'Resource': string;
    'ResultPath': string;
    'Next': string;
  }>;
  readonly 'Parse engines secret value': Partial<{
    'Type': string;
    'Parameters': Partial<{
      'ParsedValue.$': string;
    }>;
    'ResultPath': string;
    'Next': string;
  }>;
  readonly 'Create new database username and password for engines': Partial<{
    'Type': string;
    'Resource': string;
    'Parameters': Partial<{
      'Payload.$': string;
      'FunctionName': string;
    }>;
    'Retry': [Partial<{
      'ErrorEquals': [string,string,string];
      'IntervalSeconds': number;
      'MaxAttempts': number;
      'BackoffRate': number;
    }>];
    'ResultPath': string;
    'Comment': string;
    'ResultSelector': Partial<{
      'username.$': string;
      'password.$': string;
      'otsUrl.$': string;
    }>;
    'Next': string;
  }>;
  readonly 'Create user on jasmine': Partial<{
    'Type': string;
    'Resource': string;
    'Parameters': Partial<{
      'FunctionName': string;
      'Payload': Partial<{
        'script.$': string;
        'databaseName.$': string;
      }>;
    }>;
    'Retry': [Partial<{
      'ErrorEquals': [string,string,string];
      'IntervalSeconds': number;
      'MaxAttempts': number;
      'BackoffRate': number;
    }>];
    'ResultPath': string;
    'Next': string;
  }>;
  readonly 'Send credentials to jasmine user': Partial<{
    'Type': string;
    'Parameters': Partial<{
      'Destination': Partial<{
        'ToAddresses.$': string;
      }>;
      'Message': Partial<{
        'Body': Partial<{
          'Text': Partial<{
            'Data.$': string;
          }>;
        }>;
        'Subject': Partial<{
          'Data': string;
        }>;
      }>;
      'Source': string;
    }>;
    'Resource': string;
    'End': Partial<{
    }>;
  }>;
  readonly 'Get anna secret': Partial<{
    'Type': string;
    'Next': string;
    'Parameters': Partial<{
      'SecretId': string;
    }>;
    'Resource': string;
    'ResultPath': string;
  }>;
  readonly 'Parse anna secret value': Partial<{
    'Type': string;
    'Parameters': Partial<{
      'ParsedValue.$': string;
    }>;
    'ResultPath': string;
    'Next': string;
  }>;
  readonly 'Create new database username and password for anna': Partial<{
    'Type': string;
    'Resource': string;
    'Parameters': Partial<{
      'Payload.$': string;
      'FunctionName': string;
    }>;
    'Retry': [Partial<{
      'ErrorEquals': [string,string,string];
      'IntervalSeconds': number;
      'MaxAttempts': number;
      'BackoffRate': number;
    }>];
    'ResultPath': string;
    'Comment': string;
    'Next': string;
    'ResultSelector': Partial<{
      'username.$': string;
      'password.$': string;
      'otsUrl.$': string;
    }>;
  }>;
  readonly 'Create user on the anna database': Partial<{
    'Type': string;
    'Resource': string;
    'Parameters': Partial<{
      'FunctionName': string;
      'Payload': Partial<{
        'script.$': string;
        'databaseName.$': string;
      }>;
    }>;
    'Retry': [Partial<{
      'ErrorEquals': [string,string,string];
      'IntervalSeconds': number;
      'MaxAttempts': number;
      'BackoffRate': number;
    }>];
    'ResultPath': string;
    'Next': string;
  }>;
  readonly 'Send credentials to user for anna': Partial<{
    'Type': string;
    'Parameters': Partial<{
      'Destination': Partial<{
        'ToAddresses.$': string;
      }>;
      'Message': Partial<{
        'Body': Partial<{
          'Text': Partial<{
            'Data.$': string;
          }>;
        }>;
        'Subject': Partial<{
          'Data': string;
        }>;
      }>;
      'Source': string;
    }>;
    'Resource': string;
    'End': Partial<{
    }>;
  }>;
}
export interface TestStateMachineProps extends Omit<StateMachineProps, 'overrides' | 'definition'> {
  readonly overrides: TestStateMachineOverrides;
}
export class TestStateMachine extends StateMachine {
  constructor(scope: Construct, id: string, props: TestStateMachineProps) {
    super(scope, id, {
      ...props,
      definition: JSON.parse(fs.readFileSync(path.join(__dirname, 'test.workflow.json')).toString()),
    });
  }
}"
`;
